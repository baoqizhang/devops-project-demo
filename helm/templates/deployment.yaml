apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{- .Values.image.registry }}/{{ .Release.Name }}:{{- .Values.image.tag }}"
          volumeMounts:
            - name: {{ .Release.Name }}
              mountPath: ./config
            #              subPath: application.properties
            #              mountPath: /opt/config
            - name: {{ .Release.Name }}
              mountPath: /opt/secret
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: {{ .Values.request.cpu }}
              memory: {{ .Values.request.memory }}
            limits:
              cpu: {{ .Values.limit.cpu }}
              memory: {{ .Values.limit.memory }}
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 70
            failureThreshold: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 70
            periodSeconds: 5
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 70
            periodSeconds: 10
            timeoutSeconds: 2
      volumes:
        - name: {{ .Release.Name }}
          configMap:
            name: {{ .Release.Name }}
        - name: {{ .Release.Name }}
          secret:
            secretName: {{ .Release.Name }}